"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[7366],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(n),h=a,k=u["".concat(p,".").concat(h)]||u[h]||d[h]||r;return n?i.createElement(k,l(l({ref:t},c),{},{components:n})):i.createElement(k,l({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3594:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),l=["components"],o={},p="Application link",s={unversionedId:"developers/types/profiles/application-link",id:"developers/types/profiles/application-link",isDocsHomePage:!1,title:"Application link",description:"An application link (abbr. app link) represents a link to an external (and possibly centralized) application.",source:"@site/docs/02-developers/types/profiles/application-link.md",sourceDirName:"02-developers/types/profiles",slug:"/developers/types/profiles/application-link",permalink:"/developers/types/profiles/application-link",editUrl:"https://github.com/desmos-labs/docs/master/docs/02-developers/types/profiles/application-link.md",version:"current",lastUpdatedAt:1629894424,formattedLastUpdatedAt:"8/25/2021",frontMatter:{}},c=[{value:"Contained data",id:"contained-data",children:[{value:"<code>User</code>",id:"user",children:[]},{value:"<code>Data</code>",id:"data",children:[]},{value:"<code>State</code>",id:"state",children:[]},{value:"<code>OracleRequest</code>",id:"oraclerequest",children:[]},{value:"<code>Result</code>",id:"result",children:[]},{value:"<code>CreationTime</code>",id:"creationtime",children:[]}]},{value:"Create an application link",id:"create-an-application-link",children:[]}],d={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"application-link"},"Application link"),(0,r.kt)("p",null,"An application link (abbr. ",(0,r.kt)("em",{parentName:"p"},"app link"),") represents a link to an external (and possibly centralized) application."),(0,r.kt)("h2",{id:"contained-data"},"Contained data"),(0,r.kt)("p",null,"Here follows the data of an application link."),(0,r.kt)("h3",{id:"user"},(0,r.kt)("inlineCode",{parentName:"h3"},"User")),(0,r.kt)("p",null,"Address of the Desmos profile to which the link is associated. "),(0,r.kt)("h3",{id:"data"},(0,r.kt)("inlineCode",{parentName:"h3"},"Data")),(0,r.kt)("p",null,"Object that contains the details of the link. "),(0,r.kt)("h4",{id:"application"},(0,r.kt)("inlineCode",{parentName:"h4"},"Application")),(0,r.kt)("p",null,"Name of the application to which the link refers to (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"github"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"reddit"),", etc). "),(0,r.kt)("h4",{id:"username"},(0,r.kt)("inlineCode",{parentName:"h4"},"Username")),(0,r.kt)("p",null,"Identifier of the application account which the link refers to (eg. Twitter username, GitHub profile, Reddit username, etc)."),(0,r.kt)("h3",{id:"state"},(0,r.kt)("inlineCode",{parentName:"h3"},"State")),(0,r.kt)("p",null,"Representation of the current state of the link. There can be five different states in which a link can be: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"APPLICATION_LINK_STATE_INITIALIZED_UNSPECIFIED")," if the link has just been created, and it still needs to be processed; "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"APPLICATION_LINK_STATE_VERIFICATION_STARTED")," if the verification process has started; "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"APPLICATION_LINK_STATE_VERIFICATION_ERROR")," if the verification process ended with an error; "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"APPLICATION_LINK_STATE_VERIFICATION_SUCCESS")," if the verification process ended with success;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"APPLICATION_LINK_STATE_TIMED_OUT")," if the verification process expired due to a timeout. ")),(0,r.kt)("h3",{id:"oraclerequest"},(0,r.kt)("inlineCode",{parentName:"h3"},"OracleRequest")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"OracleRequest")," field contains all the data that has been sent to the oracle script in order to verify the authenticity of the link. "),(0,r.kt)("h4",{id:"id"},(0,r.kt)("inlineCode",{parentName:"h4"},"ID")),(0,r.kt)("p",null,"This is the unique id of the request that has been made to verify the link. "),(0,r.kt)("h4",{id:"oraclescriptid"},(0,r.kt)("inlineCode",{parentName:"h4"},"OracleScriptID")),(0,r.kt)("p",null,"Unique id of the script that has been called to verify the authenticity of the link. "),(0,r.kt)("h4",{id:"calldata"},(0,r.kt)("inlineCode",{parentName:"h4"},"CallData")),(0,r.kt)("p",null,"Contains the details of the data that will be used to call the oracle script. "),(0,r.kt)("h5",{id:"application-1"},(0,r.kt)("inlineCode",{parentName:"h5"},"Application")),(0,r.kt)("p",null,"Name of the application for which the link is valid (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"github"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"reddit"),", etc). "),(0,r.kt)("h5",{id:"calldata-1"},(0,r.kt)("inlineCode",{parentName:"h5"},"CallData")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"CallData")," field represents the hex-encoded data that will be given to the data source in order to fetch and verify the validity of the link. "),(0,r.kt)("h4",{id:"clientid"},(0,r.kt)("inlineCode",{parentName:"h4"},"ClientID")),(0,r.kt)("p",null,"ID of the client that has performed the request."),(0,r.kt)("h3",{id:"result"},(0,r.kt)("inlineCode",{parentName:"h3"},"Result")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Result")," field contains the effective result of the verification process. This is set only if the link state is either ",(0,r.kt)("inlineCode",{parentName:"p"},"APPLICATION_LINK_STATE_VERIFICATION_SUCCESS")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"APPLICATION_LINK_STATE_VERIFICATION_ERROR"),". "),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Result")," field can be of two types: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Result_Success")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Result_Error"))),(0,r.kt)("h4",{id:"result_success"},(0,r.kt)("inlineCode",{parentName:"h4"},"Result_Success")),(0,r.kt)("p",null,"Represents a successful result. It contains two fields. "),(0,r.kt)("h5",{id:"value"},(0,r.kt)("inlineCode",{parentName:"h5"},"Value")),(0,r.kt)("p",null,"Plain text value that has been signed from the user with their Desmos private key to prove the ownership of the Desmos profile. "),(0,r.kt)("h5",{id:"signature"},(0,r.kt)("inlineCode",{parentName:"h5"},"Signature")),(0,r.kt)("p",null,"Hex-encoded result of the plain text value signature. "),(0,r.kt)("h4",{id:"result_error"},(0,r.kt)("inlineCode",{parentName:"h4"},"Result_Error")),(0,r.kt)("p",null,"Identifies an error during the verification process. It contains only one field."),(0,r.kt)("h5",{id:"error"},(0,r.kt)("inlineCode",{parentName:"h5"},"Error")),(0,r.kt)("p",null,"Represents the description of the error that has been emitted during the verification process."),(0,r.kt)("h3",{id:"creationtime"},(0,r.kt)("inlineCode",{parentName:"h3"},"CreationTime")),(0,r.kt)("p",null,"Contains the time at which the link has been created. "),(0,r.kt)("h2",{id:"create-an-application-link"},"Create an application link"),(0,r.kt)("p",null,"Application links can be created by any user having a Desmos profile, and their validity is checked using a multi-step verification process described inside the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/desmos-labs/themis"},(0,r.kt)("em",{parentName:"a"},'"Themis"')," repository"),"."))}u.isMDXComponent=!0}}]);