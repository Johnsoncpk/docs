"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[5790],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=l(n),h=r,m=c["".concat(p,".").concat(h)]||c[h]||u[h]||s;return n?a.createElement(m,i(i({ref:t},d),{},{components:n})):a.createElement(m,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4793:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return d},default:function(){return c}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),i=["components"],o={},p="Subspace",l={unversionedId:"developers/types/staging/subspaces/subspace",id:"version-mainnet/developers/types/staging/subspaces/subspace",isDocsHomePage:!1,title:"Subspace",description:"Inside Desmos, subspaces are the way with which anyone can distinguish a dApp with their users, posts and admins.",source:"@site/versioned_docs/version-mainnet/02-developers/02-types/staging/subspaces/subspace.md",sourceDirName:"02-developers/02-types/staging/subspaces",slug:"/developers/types/staging/subspaces/subspace",permalink:"/developers/types/staging/subspaces/subspace",editUrl:"https://github.com/desmos-labs/docs/master/versioned_docs/version-mainnet/02-developers/02-types/staging/subspaces/subspace.md",version:"mainnet",lastUpdatedAt:1631545500,formattedLastUpdatedAt:"9/13/2021",frontMatter:{}},d=[{value:"Contained data",id:"contained-data",children:[]},{value:"<code>SubspaceID</code>",id:"subspaceid",children:[]},{value:"<code>Name</code>",id:"name",children:[]},{value:"<code>Description</code>",id:"description",children:[]},{value:"<code>Logo</code>",id:"logo",children:[]},{value:"<code>Creator</code>",id:"creator",children:[]},{value:"<code>Owner</code>",id:"owner",children:[]},{value:"<code>Type</code>",id:"type",children:[]},{value:"Other data",id:"other-data",children:[]}],u={toc:d};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"subspace"},"Subspace"),(0,s.kt)("p",null,"Inside Desmos, subspaces are the way with which anyone can distinguish a dApp with their users, posts and admins.",(0,s.kt)("br",{parentName:"p"}),"\n","A subspace can be seen as a group that belongs to a user who can decide how to handle users inside it.",(0,s.kt)("br",{parentName:"p"}),"\n","Inside subspaces users can be:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Registered or unregistered"),":",(0,s.kt)("br",{parentName:"li"}),"This will allow them to perform some kind of operations like to post inside the subspace\nor to put reactions, etc..."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Added or Removed as admins"),":",(0,s.kt)("br",{parentName:"li"}),"This will allow them to moderate the subspace alongside the owner."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Banned or Unbanned"),":",(0,s.kt)("br",{parentName:"li"}),"This can happen when a user breaks the rules of a subspace. ")),(0,s.kt)("h2",{id:"contained-data"},"Contained data"),(0,s.kt)("p",null,"Following you can find the attributes that distinguish one subspace from the other."),(0,s.kt)("h2",{id:"subspaceid"},(0,s.kt)("inlineCode",{parentName:"h2"},"SubspaceID")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"SubspaceID")," uniquely identifies each subspace. It can be specified from the creator and has to be a valid\nSHA-256 hash string."),(0,s.kt)("h2",{id:"name"},(0,s.kt)("inlineCode",{parentName:"h2"},"Name")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Name")," is the human-readable name of the subspace. It must be non-empty nor blank."),(0,s.kt)("h2",{id:"description"},(0,s.kt)("inlineCode",{parentName:"h2"},"Description")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Description")," contains a brief summary of what the subspace is about."),(0,s.kt)("h2",{id:"logo"},(0,s.kt)("inlineCode",{parentName:"h2"},"Logo")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Logo")," is the URI of the image representing the subspace."),(0,s.kt)("h2",{id:"creator"},(0,s.kt)("inlineCode",{parentName:"h2"},"Creator")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Creator")," identifies the user that has created the subspace.",(0,s.kt)("br",{parentName:"p"}),"\n","It's a string representation of a Bech32 address and, in order to be valid,",(0,s.kt)("br",{parentName:"p"}),"\n","it must begin with the ",(0,s.kt)("inlineCode",{parentName:"p"},"desmos")," Bech32 human-readable part."),(0,s.kt)("h2",{id:"owner"},(0,s.kt)("inlineCode",{parentName:"h2"},"Owner")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Owner")," identifies the owner of the subspace.",(0,s.kt)("br",{parentName:"p"}),"\n","It can be equivalent to the ",(0,s.kt)("inlineCode",{parentName:"p"},"Creator")," field.",(0,s.kt)("br",{parentName:"p"}),"\n","It's a string representation of a Bech32 address and, in order to be valid,",(0,s.kt)("br",{parentName:"p"}),"\n","it must begin with the ",(0,s.kt)("inlineCode",{parentName:"p"},"desmos")," Bech32 human-readable part."),(0,s.kt)("h2",{id:"type"},(0,s.kt)("inlineCode",{parentName:"h2"},"Type")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Type")," field tells if users are free to post inside the subspace without being registered in it. The accepted values of this field are:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"SUBSPACE_TYPE_OPEN")," if the subspace should be open to everyone and does not require an admin registering a user before they can post inside such subspace"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"SUBSPACE_TYPE_CLOSED")," if the subspace should be closed and users that want to post inside it should be first registered by a subspace admin.")),(0,s.kt)("h2",{id:"other-data"},"Other data"),(0,s.kt)("p",null,"Aside from the attributes of each subspace, each subspace has its own set of the following:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Admins"),(0,s.kt)("br",{parentName:"p"}),"\n","They represent the administrators of the subspace and are allowed to edit the subpsace attributes as well as to (un)register and (un)ban users.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Registered users"),(0,s.kt)("br",{parentName:"p"}),"\n","These are all the users that are allowed to post inside the subspace. Note that this is valid only for subspaces that have their type set to ",(0,s.kt)("inlineCode",{parentName:"p"},"Closed"),". All subspaces that are set to be ",(0,s.kt)("inlineCode",{parentName:"p"},"Open")," allow any users to post inside them, so the list of registered users will be empty.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Banned users"),(0,s.kt)("br",{parentName:"p"}),"\n","These are all the users that are not permitted to perform any action inside a subspace."))))}c.isMDXComponent=!0}}]);